diff --git a/lazy_tensor_core/lazy_tensor_core/csrc/ops/var_mean.cpp b/lazy_tensor_core/lazy_tensor_core/csrc/ops/var_mean.cpp
index dcd15ac6bd..c81c352154 100644
--- a/lazy_tensor_core/lazy_tensor_core/csrc/ops/var_mean.cpp
+++ b/lazy_tensor_core/lazy_tensor_core/csrc/ops/var_mean.cpp
@@ -10,7 +10,7 @@ namespace ops {
 VarMean::VarMean(const Value& input,
                  std::vector<lazy_tensors::int64> dimensions,
                  lazy_tensors::int64 correction, bool keep_reduced_dimensions)
-    : Node(ir::OpKind(at::aten::var), {input},
+    : Node(ir::OpKind(at::aten::var_mean), {input},
            /*num_outputs=*/2,
            lazy_tensors::util::MHash(dimensions, correction,
                                      keep_reduced_dimensions)),
diff --git a/lazy_tensor_core/lazy_tensor_core/csrc/ts_backend/aten_eager_fallback.cpp b/lazy_tensor_core/lazy_tensor_core/csrc/ts_backend/aten_eager_fallback.cpp
index 90084af37f..57a978e62d 100644
--- a/lazy_tensor_core/lazy_tensor_core/csrc/ts_backend/aten_eager_fallback.cpp
+++ b/lazy_tensor_core/lazy_tensor_core/csrc/ts_backend/aten_eager_fallback.cpp
@@ -46,8 +46,4 @@ void ltc_eager_fallback(const c10::OperatorHandle& op,
       lazy_tensors::compiler::TSComputationClient::HardwareDeviceType());
 }
 
-TORCH_LIBRARY_IMPL(_, XLA, m) {
-  m.fallback(torch::CppFunction::makeFromBoxedFunction<&ltc_eager_fallback>());
-}
-
 }  // namespace torch_lazy_tensors
